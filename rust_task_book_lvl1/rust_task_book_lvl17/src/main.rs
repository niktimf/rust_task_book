

/// Уровень 1.7 задачника Rust
/// https://code.mu/ru/rust/tasker/stager/1/7/

fn main() {


    // 1. Расскажите, какой диапазон значений может принимать тип u16.
    // Тип u16, хранит целые числа без знака длиной 16 бит, принимает значения от 0 до 65535.


    // 2. Найдите сумму квадратов всех целых нечетных чисел в промежутке от 1 до 100.
    println!("Sum of squares of odd numbers: {}", (1..100).filter(|x| x % 2 != 0).map(|x| x * x).sum::<u32>());
    println!("Sum of squares of odd numbers: {}", (1..100).step_by(2).map(|x| x * x).sum::<u32>());


    // 3. Напишите код, который выведет первые N степеней двойки.
    fn n_powers_of_two(n: u32) {
        (0..n).for_each(|x| println!("2 ^ {} = {}", x, 2u32.pow(x)))
    }
    n_powers_of_two(1);


    // 4. Даны три строки, сложите значения этих строк как целые числа.
    let txt41: &str = "123";
    let txt42: &str = "456";
    let txt43: &str = "789";
    println!("{}", txt41.parse::<u32>().unwrap() + txt42.parse::<u32>().unwrap() + txt43.parse::<u32>().unwrap());


    // 5. Дана некоторая строка, найдите сумму цифр из этой строки.
    let txt5: &str = "123456789";
    println!("{}", txt5.chars().map(|x| x.to_digit(10).unwrap()).sum::<u32>());


    // 6. Дано дробное число, содержащее количество гигабайт, переведите это значение в мегабайты, килобайты и байты.
    let gb: f32 = 35.24;
    println!("{} GB = {} MB = {} KB = {} B", gb, gb * 1024.0, gb * 1024.0 * 1024.0, gb * 1024.0 * 1024.0 * 1024.0);


}
